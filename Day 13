MATPLOTLIB STYLES-

random seeding-

import matplotlib.pyplot as plt


np.random.seed(0)  # Set seed so plots look the same.


def legend_demo(ax):
    x = np.linspace(0, 1, 30)
    ax.plot(x, np.sin(2*np.pi*x), '-s', label='line')


import matplotlib.pyplot as plt


np.random.seed(0)  # Set seed so plots look the same.


def histogram_demo(ax):
    # example data
    mu = 100  # mean of distribution
    
    
LIGHTBOX IMPLEMENTATION-

     text-align: right;
    max-width: 100%;
    margin-right: 20px;
    line-height: 5px;
}

#lightbox #plot-info,
#lightbox #plot-info p,
#lightbox #plot-info p span {
    color: #fff;
    max-width: 100%;
    line-height: 5px;
}


fig=plt.figure(figsize=(8,3))

plt.plot(X,Y)

plt.title('Line Plot')
plt.xlabel('x-axis')
plt.ylabel('y-axis')

plt.show()


-------------------------------------------------------------

USING SUBPLOTS-

There are three ways of generating subplots in matplotlib:

Using subplot()
Using subplots()
Using subplot2grid()


fig=plt.figure(figsize=(16,6))

ax1=plt.subplot(1,2,1)
ax1.plot(X,[x+(x*random.random()) for x in X])
ax1.set_title('Plot 1')

ax2=plt.subplot(1,2,2)
ax2.plot(X,[x-(x*random.random()) for x in X])
ax2.set_title('Plot 2')

plt.show()

fig,axes=plt.subplots(2,2)
print(axes)

----------------------------------------------------------------------------
MULTIPLE BAR PLOTS-
import numpy as np
import matplotlib.pyplot as plt
data = [[30, 25, 50, 20],
[40, 23, 51, 17],
[35, 22, 45, 19]]
X = np.arange(4)
fig = plt.figure()
ax = fig.add_axes([0,0,1,1])
ax.bar(X + 0.00, data[0], color = 'b', width = 0.25)
ax.bar(X + 0.25, data[1], color = 'g', width = 0.25)
ax.bar(X + 0.50, data[2], color = 'r', width = 0.25)
------------------
MULTIPLE SUBPLOTS-

VERTICLE-

fig, axs = plt.subplots(2)
fig.suptitle('Vertically stacked subplots')
axs[0].plot(x, y)
axs[1].plot(x, -y)


HORIZONTAL-
fig, (ax1, ax2) = plt.subplots(1, 2)
fig.suptitle('Horizontally stacked subplots')
ax1.plot(x, y)
ax2.plot(x, -y)
-----------------
MULTIPLE FIGURES-

import matplotlib.pyplot as plt
import numpy as np

t = np.arange(0.0, 2.0, 0.01)
s1 = np.sin(2*np.pi*t)
s2 = np.sin(4*np.pi*t)

CREATE FIGURE1-

 plt.figure(1)
 plt.subplot(211)
 plt.plot(t, s1)
 plt.subplot(212)
 plt.plot(t, 2*s1)
 
CREATE FICURE 2-
   plt.figure(2)
   plt.plot(t, s2)
   
NOW MAKE CHANGES IN FIGURE 1-
 
 plt.figure(1)
 plt.subplot(211)
 plt.plot(t, s2, 's')
 ax = plt.gca()
 ax.set_xticklabels([])

 plt.show()
 
